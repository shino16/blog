<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on shino16</title>
    <link>https://shino16.github.io/blog/post/</link>
    <description>Recent content in Posts on shino16</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 03 Oct 2023 12:00:00 +0900</lastBuildDate><atom:link href="https://shino16.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PFN2023夏季インターン参加記</title>
      <link>https://shino16.github.io/blog/post/work/intern-pfn/</link>
      <pubDate>Tue, 03 Oct 2023 12:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/work/intern-pfn/</guid>
      <description>しの (@shino1609) です。8月10日から9月29日まで、株式会社 Preferred Networks の夏季インターンシップに「CuPy の開発」というテーマで参加しました。 この記事では、業</description>
    </item>
    
    <item>
      <title>No.1978 Permutation Repetition</title>
      <link>https://shino16.github.io/blog/post/p/yuki1978/</link>
      <pubDate>Fri, 10 Jun 2022 14:12:34 +0100</pubDate>
      
      <guid>https://shino16.github.io/blog/post/p/yuki1978/</guid>
      <description>次の問題のテスター解です．形式的冪級数の操作により $O(N \log N)$ で解けます． 問題文を次のように言い換えます． ${1,\ldots,N}$ の順列 $\sigma$ が与えられる．$\tau^M =</description>
    </item>
    
    <item>
      <title>1の位で場合分けする桁DP (C&#43;&#43;)</title>
      <link>https://shino16.github.io/blog/post/algo/1%E3%81%AE%E4%BD%8D%E3%81%A7%E5%A0%B4%E5%90%88%E5%88%86%E3%81%91%E3%81%99%E3%82%8B%E6%A1%81dp-c&#43;&#43;/</link>
      <pubDate>Mon, 06 Sep 2021 19:32:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/algo/1%E3%81%AE%E4%BD%8D%E3%81%A7%E5%A0%B4%E5%90%88%E5%88%86%E3%81%91%E3%81%99%E3%82%8B%E6%A1%81dp-c&#43;&#43;/</guid>
      <description>ABC154-E Almost Everywhere Zero この問題を考えます．素直な桁DPです． 問題文 $1$ 以上 $N$ 以下の整数であって、$10$ 進法で表したときに、$0$ でない数字がちょうど $K$ 個あ</description>
    </item>
    
    <item>
      <title>みんプロ2019 E - Odd Subrectangles</title>
      <link>https://shino16.github.io/blog/post/p/yahoo_procon2019_qual_e/</link>
      <pubDate>Fri, 19 Feb 2021 15:29:27 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/p/yahoo_procon2019_qual_e/</guid>
      <description>考察 行列に $(0,1)$—ベクトルを掛けていくつかの行・列を取り出すことなどを考えると、問題は次のように言い換えられます。 $N \times M$ の $\mathbb{F}_2$ 行列 $A$ が</description>
    </item>
    
    <item>
      <title>Montgomery 乗算を実装した</title>
      <link>https://shino16.github.io/blog/post/algo/montgomery%E4%B9%97%E7%AE%97%E3%82%92%E5%AE%9F%E8%A3%85/</link>
      <pubDate>Tue, 03 Nov 2020 23:45:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/algo/montgomery%E4%B9%97%E7%AE%97%E3%82%92%E5%AE%9F%E8%A3%85/</guid>
      <description>modulo 演算の高速化です。 これらのうち、Montgomery 乗算というものを実装しました。 余談？ 経緯？ Codeforces では C++ 以外 32bit 環境なんだよなとふと思って、演</description>
    </item>
    
    <item>
      <title>データ構造に乗せる代数的構造の持ち方</title>
      <link>https://shino16.github.io/blog/post/algo/%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B%E4%BB%A3%E6%95%B0%E7%9A%84%E6%A7%8B%E9%80%A0%E3%81%AE%E6%8C%81%E3%81%A1%E6%96%B9/</link>
      <pubDate>Mon, 19 Oct 2020 02:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/algo/%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0%E3%81%AB%E4%B9%97%E3%81%9B%E3%82%8B%E4%BB%A3%E6%95%B0%E7%9A%84%E6%A7%8B%E9%80%A0%E3%81%AE%E6%8C%81%E3%81%A1%E6%96%B9/</guid>
      <description>上の記事で D として書かれているものを、利用者側が構造体を書かなくてもよいような方法で実装してみました。 だいたい次のような見た目となります。詳</description>
    </item>
    
    <item>
      <title>IOライブラリの設計</title>
      <link>https://shino16.github.io/blog/post/algo/io%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E8%A8%AD%E8%A8%88/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/algo/io%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E8%A8%AD%E8%A8%88/</guid>
      <description>競プロ用の入出力ライブラリ（Rust）を作る 要件 長年抱えてる葛藤が、貼る用のライブラリをゴテゴテに作りこむか、簡潔にとどめたほうが綺麗かとい</description>
    </item>
    
    <item>
      <title>オートマトン（DFA）での桁DPを理解する</title>
      <link>https://shino16.github.io/blog/post/algo/%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0900</pubDate>
      
      <guid>https://shino16.github.io/blog/post/algo/%E3%82%AA%E3%83%BC%E3%83%88%E3%83%9E%E3%83%88%E3%83%B3/</guid>
      <description>まとめ 文字列の識別を DFA として表現することで、複数の条件や状態遷移を分けて記述し、これらの組み合わせで桁DPを構成するフレームワークが出来まし</description>
    </item>
    
    <item>
      <title>期待値とダブルカウント・鳩ノ巣原理の関係</title>
      <link>https://shino16.github.io/blog/post/math/%E6%9C%9F%E5%BE%85%E5%80%A4%E3%81%A8%E3%83%80%E3%83%96%E3%83%AB%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E9%B3%A9%E3%83%8E%E5%B7%A3%E5%8E%9F%E7%90%86%E3%81%AE%E9%96%A2%E4%BF%82/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shino16.github.io/blog/post/math/%E6%9C%9F%E5%BE%85%E5%80%A4%E3%81%A8%E3%83%80%E3%83%96%E3%83%AB%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E9%B3%A9%E3%83%8E%E5%B7%A3%E5%8E%9F%E7%90%86%E3%81%AE%E9%96%A2%E4%BF%82/</guid>
      <description>深夜の算数クイズ 4 pic.twitter.com/nXIjPTlmoo &amp;mdash; きり (@kiri8128) September 28, 2020 この問題をきっかけに期待値を利用した証明法についていくつか復習し、役割や鳩ノ巣原理との関係などを考えました</description>
    </item>
    
  </channel>
</rss>
